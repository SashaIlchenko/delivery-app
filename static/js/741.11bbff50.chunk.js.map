{"version":3,"file":"static/js/741.11bbff50.chunk.js","mappings":"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","sources":["components/orderForm/OrderForm.styled.jsx","components/orderForm/OrderForm.jsx","components/orderList/OrderList.styled.jsx","components/orderList/OrderList.jsx","pages/BascetPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Form as FormikForm } from 'formik';\nimport { Field } from \"formik\";\n\nexport const Form = styled(FormikForm)`\nwidth: 300px;\nheight: 447px;\npadding: 30px;\nmargin-right:auto;\nmargin-left:auto;\nmargin-top:30px;\nbackground-image: linear-gradient(to bottom, #008080\n0%, #008080 69%, #E0FFFF 100%);\n box-shadow: -3px 7px 21px 0 rgba(0, 0, 0, 0.23);\n border-radius: 21px;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;`\n\nexport const FormField = styled.label`\ndisplay: flex;\nflex-direction: column;\ncolor: #fff;\nfont-size:24px;\nfont-weight: 600;`\nexport const Input = styled(Field)`\nmargin-top:10px;\npadding-left: 15px;\nborder-radius: 3px;\nborder: none;\nheight: 50px;`\nexport const AddBtn = styled.button`\nfont-size:18px;\nfont-weight: 500;\nmargin-top: 10px;\npadding:8px;\nweight: 150px;\ncolor: #fff;\nopacity: 0.7;\nborder: none;\nborder-radius:3px;\nbackground-color: #008080;\n&:hover {\n    opacity: 1;\n}`","import { Formik } from \"formik\";\nimport { Form, FormField, Input } from './OrderForm.styled';\nconst initialValues = {\n    name: '',\n    email: '',\n    phone: '',\n    address: '',\n};\n\nexport const OrderForm = ({ onSubmit }) => {\n\n    console.log(initialValues)\n    return (<Formik\n        initialValues={initialValues}\n        onSubmit={(values, { resetForm }) => {\n            onSubmit({\n                ...values,\n            })\n            resetForm();\n        }}\n    >\n        <Form>\n            < FormField>Name\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    placeholder=\"Name\"\n                /></ FormField>\n            < FormField>Email\n                <Input\n                    type=\"email\"\n                    name=\"email\"\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2, 4}$\"\n                    title=\"Email contain @\"\n                    required\n                    placeholder=\"email\"\n                />\n            </ FormField>\n            < FormField>Phone\n                <Input\n                    type=\"tel\"\n                    name=\"phone\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    placeholder=\"phone\"\n                />\n            </ FormField>\n            < FormField>Adress\n                <Input\n                    type=\"address\"\n                    name=\"address\"\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2, 4}$\"\n                    title=\"Adress must be comtain the city and street\"\n                    required\n                    placeholder=\"address\"\n                />\n            </ FormField>\n            <button type=\"submit\">Add contact</button>\n        </Form>\n    </Formik>)\n}","import styled from \"@emotion/styled\";\n\nexport const OrderListStyle = styled.ul`\nmargin-top: 30px;\ndisplay: flex;\nflex-wrap: wrap;\ngap: 48px;\nalign-items:center;\njustify-content: center;\n`\n\nexport const Item = styled.li`\npadding-bottom:36px;\nwidth: 380px;\nlist-style: none;\nbackground-image: linear-gradient(to bottom, #008080\n0%, #008080 69%, #E0FFFF 100%);\n box-shadow: -3px 7px 21px 0 rgba(0, 0, 0, 0.23);\n border-radius: 21px;`\n\nexport const Wrapper = styled.div`\nmargin-bottom: 16px;\npadding: 20px;\nwidth:340px;\nbox-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.25),\ninset 0 3px 3px 0 rgba(251, 248, 255, 0.06),\ninset 0 -2px 3px 0 rgba(174, 123, 227, 0.25);\n `\n\nexport const Photo = styled.img`\nwidth:300px;\nheight:200px;\nborder-radius:16px;\nmargin-left: auto;\nmargin-right:auto;\nborder:8px solid #EBD8FF;\nbox-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.25),\ninset 0 3px 3px 0 rgba(251, 248, 255, 0.06),\ninset 0 -2px 3px 0 rgba(174, 123, 227, 0.25); \n`\n\nexport const FoodInfo = styled.p`\nmargin-bottom:16px;\ntext-align: center;\nfont-size: 20px;\nfont-weight: 500;\nline-height:1.2;\ncolor:#EBD8FF;\n`\n\nexport const CounterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 10px;\n`;\n\nexport const CounterBtn = styled.button`\n  width: 30px;\n  align-items: center;\n  font-size: 16px;\n  border: none;\n  background-color: transparent;\n  color: #fff;\n  cursor: pointer;\n`;\n\nexport const InputCounter = styled.input`\n  text-align: center;\n  width: 30px;\n  font-size: 16px;\n  border: none;\n  background-color: transparent;\n  color:#fff;\n`;\n\nexport const DeleteBtn = styled.button`\nmargin-top:20px;\nwidth: 50px;\nmargin-left: auto;\nmargin-right: auto;\ncolor: #373737;\nbackground-color: #EBD8FF;\nborder-radius: 10.31px;\n&:focus, &:hover {\n  background-color: #008080;\n    cursor: pointer;\n     color: #fff;\n};\n &.active {\n    background-color: #5CD3A8;\n  }\n`\n\nexport const TotalPriceLabel = styled.p`\nfont-size:24px;\nfont-weight: 600;\nmargin-top: 30px;`\n","import { useState, useEffect } from \"react\";\nimport {\n    OrderListStyle,\n    Item,\n    Wrapper,\n    Photo,\n    FoodInfo,\n    CounterWrapper,\n    CounterBtn,\n    InputCounter,\n    DeleteBtn,\n    TotalPriceLabel\n} from \"./OrderList.styled\";\nimport { FiTrash2 } from \"react-icons/fi\";\n\nexport const OrderList = ({ user }) => {\n    const [currentOrder, setCurrentorder] = useState([]);\n    const [count, setCount] = useState(JSON.parse(localStorage.getItem('count')) || 0);\n    // const [currentPrice, setCurrentPrice] = useState([]);\n    const [totalPrice, setTotalPrice] = useState(0);\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem('order'));\n        setCurrentorder(data);\n    }, []);\n    useEffect(() => {\n        localStorage.setItem('order', JSON.stringify(currentOrder))\n        localStorage.setItem('count', JSON.stringify(count))\n        const price = currentOrder.reduce((acc, item) => acc + item.price * count[item._id], 0);\n        setTotalPrice(price);\n    }, [currentOrder, count])\n\n    const handleIncrement = itemId => {\n        setCount(prevCounts => ({\n            ...prevCounts,\n            [itemId]: (prevCounts[itemId] || 0) + 1,\n        }));\n    };\n    const handleDecrement = itemId => {\n        setCount(prevCounts => {\n            const newCount = (prevCounts[itemId] || 0) - 1;\n            return {\n                ...prevCounts,\n                [itemId]: newCount >= 0 ? newCount : 0,\n            };\n        });\n    };\n    const handleDeleteBtn = (itemId) => {\n        const deleteOrder = currentOrder.filter(order => order._id !== itemId)\n        setCurrentorder(deleteOrder)\n    };\n    const changePrice = (itemId) => {\n        const object = currentOrder.filter(order => order._id === itemId);\n        for (const item of object) {\n            return Number(item.price) * count[itemId];\n        }\n    }\n    return (\n        <div>\n            {currentOrder ? <OrderListStyle> {\n                currentOrder.map(order => {\n                    return <Item key={order.id}>\n                        <Wrapper><Photo src={order.photo} alt={order.title} /></Wrapper>\n                        <div><FoodInfo>Price: {changePrice(order._id) || order.price}</FoodInfo>\n                            <FoodInfo>{order.title}</FoodInfo></div>\n                        <CounterWrapper>\n                            <CounterBtn\n                                type=\"button\"\n                                onClick={() => handleDecrement(order._id)}\n                            >\n                                -\n                            </CounterBtn>\n                            <InputCounter\n                                type=\"text\"\n                                name=\"counter\"\n                                value={count[order._id] || 0}\n                                readOnly\n                            />\n                            <CounterBtn\n                                type=\"button\"\n                                onClick={() => handleIncrement(order._id)}\n                            >\n                                +\n                            </CounterBtn>\n                        </CounterWrapper>\n                        <DeleteBtn type='button' onClick={() => handleDeleteBtn(order._id)}><FiTrash2 /></DeleteBtn>\n                    </Item>\n\n                })\n            }</OrderListStyle> : \"Please, add products!\"}\n            <TotalPriceLabel>Total price: {totalPrice} </TotalPriceLabel>\n            <button type='submit'>Sumbit</button>\n        </div>\n    )\n}","import { useState } from \"react\";\n\nimport { OrderForm } from \"components/orderForm/OrderForm\";\nimport { OrderList } from \"components/orderList/OrderList\";\nimport styled from \"@emotion/styled\";\nconst BascetPage = () => {\n\n    const [submitData, setSubmitData] = useState([]);\n    const onSubmit = (values) => {\n        setSubmitData(p => [...p, values]);\n\n    }\n    console.log(submitData)\n    const Container = styled.div`\n    display: flex;\n    align-items: flex-start;`\n    return <Container>\n        <OrderForm onSubmit={onSubmit} />\n        <OrderList user={submitData} />\n    </Container>\n}\n\nexport default BascetPage;"],"names":["Form","styled","FormikForm","FormField","Input","Field","initialValues","name","email","phone","address","OrderForm","onSubmit","console","log","values","resetForm","type","pattern","title","required","placeholder","OrderListStyle","Item","Wrapper","Photo","FoodInfo","CounterWrapper","CounterBtn","InputCounter","DeleteBtn","TotalPriceLabel","OrderList","user","useState","currentOrder","setCurrentorder","JSON","parse","localStorage","getItem","count","setCount","totalPrice","setTotalPrice","useEffect","data","setItem","stringify","price","reduce","acc","item","_id","changePrice","itemId","object","filter","order","Number","map","src","photo","alt","onClick","prevCounts","newCount","value","readOnly","deleteOrder","handleDeleteBtn","id","submitData","setSubmitData","Container","p"],"sourceRoot":""}