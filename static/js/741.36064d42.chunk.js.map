{"version":3,"file":"static/js/741.36064d42.chunk.js","mappings":"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","sources":["components/orderForm/OrderForm.styled.jsx","components/orderForm/OrderForm.jsx","components/orderList/OrderList.styled.jsx","components/orderList/OrderList.jsx","pages/BascetPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Form as FormikForm } from 'formik';\nimport { Field } from \"formik\";\n\nexport const Form = styled(FormikForm)`\nwidth: 300px;\nheight: 447px;\npadding: 30px;\nmargin-right:auto;\nmargin-left:auto;\nmargin-top:30px;\nbackground-image: linear-gradient(to bottom, #008080\n0%, #008080 69%, #E0FFFF 100%);\n box-shadow: -3px 7px 21px 0 rgba(0, 0, 0, 0.23);\n border-radius: 21px;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;`\n\nexport const FormField = styled.label`\ndisplay: flex;\nflex-direction: column;\ncolor: #fff;\nfont-size:24px;\nfont-weight: 600;`\nexport const Input = styled(Field)`\nmargin-top:10px;\npadding-left: 15px;\nborder-radius: 3px;\nborder: none;\nheight: 50px;`\nexport const AddBtn = styled.button`\nfont-size:18px;\nfont-weight: 500;\nmargin-top: 10px;\npadding:8px;\nweight: 150px;\ncolor: #fff;\nopacity: 0.7;\nborder: none;\nborder-radius:3px;\nbackground-color: #008080;\n&:hover {\n    opacity: 1;\n}`","import { Formik } from \"formik\";\nimport { Form, FormField, Input } from './OrderForm.styled';\nconst initialValues = {\n    name: '',\n    email: '',\n    phone: '',\n    address: '',\n};\n\nexport const OrderForm = () => {\n    return (<Formik\n        initialValues={initialValues}\n    >\n        <Form>\n            < FormField>Name\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    placeholder=\"Name\"\n                /></ FormField>\n            < FormField>Email\n                <Input\n                    type=\"email\"\n                    name=\"email\"\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2, 4}$\"\n                    title=\"Email contain @\"\n                    required\n                    placeholder=\"email\"\n                />\n            </ FormField>\n            < FormField>Phone\n                <Input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    placeholder=\"Number\"\n                />\n            </ FormField>\n            < FormField>Adress\n                <Input\n                    type=\"adress\"\n                    name=\"adress\"\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2, 4}$\"\n                    title=\"Adress must be comtain the city and street\"\n                    required\n                    placeholder=\"adress\"\n                />\n            </ FormField>\n        </Form>\n    </Formik>)\n}","import styled from \"@emotion/styled\";\n\nexport const OrderListStyle = styled.ul`\nmargin-top: 30px;\ndisplay: flex;\nflex-wrap: wrap;\ngap: 48px;\nalign-items:center;\njustify-content: center;\n`\n\nexport const Item = styled.li`\npadding-bottom:36px;\nwidth: 380px;\nlist-style: none;\nbackground-image: linear-gradient(to bottom, #008080\n0%, #008080 69%, #E0FFFF 100%);\n box-shadow: -3px 7px 21px 0 rgba(0, 0, 0, 0.23);\n border-radius: 21px;`\n\nexport const Wrapper = styled.div`\nmargin-bottom: 16px;\npadding: 20px;\nwidth:340px;\nbox-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.25),\ninset 0 3px 3px 0 rgba(251, 248, 255, 0.06),\ninset 0 -2px 3px 0 rgba(174, 123, 227, 0.25);\n `\n\nexport const Photo = styled.img`\nwidth:300px;\nheight:200px;\nborder-radius:16px;\nmargin-left: auto;\nmargin-right:auto;\nborder:8px solid #EBD8FF;\nbox-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.25),\ninset 0 3px 3px 0 rgba(251, 248, 255, 0.06),\ninset 0 -2px 3px 0 rgba(174, 123, 227, 0.25); \n`\n\nexport const FoodInfo = styled.p`\nmargin-bottom:16px;\ntext-align: center;\nfont-size: 20px;\nfont-weight: 500;\nline-height:1.2;\ncolor:#EBD8FF;\n`\n\nexport const CounterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 10px;\n`;\n\nexport const CounterBtn = styled.button`\n  width: 30px;\n  align-items: center;\n  font-size: 16px;\n  border: none;\n  background-color: transparent;\n  color: #fff;\n  cursor: pointer;\n`;\n\nexport const InputCounter = styled.input`\n  text-align: center;\n  width: 30px;\n  font-size: 16px;\n  border: none;\n  background-color: transparent;\n  color:#fff;\n`;\n\nexport const DeleteBtn = styled.button`\nmargin-top:20px;\nwidth: 100px;\nmargin-left: auto;\nmargin-right: auto;\ncolor: #373737;\nbackground-color: #EBD8FF;\nborder-radius: 10.31px;\n&:focus, &:hover {\n  background-color: #008080;\n    cursor: pointer;\n     color: #fff;\n};\n &.active {\n    background-color: #5CD3A8;\n  }\n`\n","import { useState, useEffect } from \"react\";\nimport {\n    OrderListStyle,\n    Item,\n    Wrapper,\n    Photo,\n    FoodInfo,\n    CounterWrapper,\n    CounterBtn,\n    InputCounter,\n    DeleteBtn\n} from \"./OrderList.styled\";\n\nexport const OrderList = () => {\n    const [currentOrder, setCurrentorder] = useState([]);\n    const [count, setCount] = useState(JSON.parse(localStorage.getItem('count')) || 0);\n    // const [currentPrice, setCurrentPrice] = useState([]);\n    const [totalPrice, setTotalPrice] = useState(0);\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem('order'));\n        setCurrentorder(data);\n    }, []);\n    useEffect(() => {\n        localStorage.setItem('order', JSON.stringify(currentOrder))\n        localStorage.setItem('count', JSON.stringify(count))\n        const getTotalPrice = () => {\n            let sum = 0;\n            console.log(currentOrder)\n            for (const item of currentOrder) {\n                sum += item.price;\n                return setTotalPrice(sum)\n            }\n        }\n        getTotalPrice();\n\n    }, [currentOrder, count])\n\n    const handleIncrement = itemId => {\n        setCount(prevCounts => ({\n            ...prevCounts,\n            [itemId]: (prevCounts[itemId] || 0) + 1,\n        }));\n    };\n    const handleDecrement = itemId => {\n        setCount(prevCounts => {\n            const newCount = (prevCounts[itemId] || 0) - 1;\n            return {\n                ...prevCounts,\n                [itemId]: newCount >= 0 ? newCount : 0,\n            };\n        });\n    };\n    const handleDeleteBtn = (itemId) => {\n        const deleteOrder = currentOrder.filter(order => order.id !== itemId)\n        setCurrentorder(deleteOrder)\n    };\n    const changePrice = (itemId) => {\n        const object = currentOrder.filter(order => order.id === itemId);\n        for (const item of object) {\n            return Number(item.price) * count[itemId];\n        }\n    }\n    return (\n        <div>\n            {currentOrder ? <OrderListStyle> {\n                currentOrder.map(order => {\n                    return <Item key={order.id}>\n                        <Wrapper><Photo src={order.photo} alt={order.title} /></Wrapper>\n                        <div><FoodInfo>Price: {changePrice(order.id) || order.price}</FoodInfo>\n                            <FoodInfo>{order.title}</FoodInfo></div>\n                        <CounterWrapper>\n                            <CounterBtn\n                                type=\"button\"\n                                onClick={() => handleDecrement(order.id)}\n                            >\n                                -\n                            </CounterBtn>\n                            <InputCounter\n                                type=\"text\"\n                                name=\"counter\"\n                                value={count[order.id] || 0}\n                                readOnly\n                            />\n                            <CounterBtn\n                                type=\"button\"\n                                onClick={() => handleIncrement(order.id)}\n                            >\n                                +\n                            </CounterBtn>\n                        </CounterWrapper>\n                        <DeleteBtn type='button' onClick={() => handleDeleteBtn(order.id)}>Delete</DeleteBtn>\n                    </Item>\n\n                })\n            }</OrderListStyle> : \"Please, add products!\"}\n            <p>Total price: {totalPrice} </p>\n        </div>\n    )\n}","import { OrderForm } from \"components/orderForm/OrderForm\";\nimport { OrderList } from \"components/orderList/OrderList\";\nimport styled from \"@emotion/styled\";\nconst BascetPage = () => {\n    const Container = styled.div`\n    display: flex;\n    align-items: flex-start;`\n    return <Container><OrderForm />\n        <OrderList />\n    </Container>\n}\n\nexport default BascetPage;"],"names":["Form","styled","FormikForm","FormField","Input","Field","initialValues","name","email","phone","address","OrderForm","type","pattern","title","required","placeholder","OrderListStyle","Item","Wrapper","Photo","FoodInfo","CounterWrapper","CounterBtn","InputCounter","DeleteBtn","OrderList","useState","currentOrder","setCurrentorder","JSON","parse","localStorage","getItem","count","setCount","totalPrice","setTotalPrice","useEffect","data","setItem","stringify","sum","console","log","price","getTotalPrice","changePrice","itemId","object","filter","order","id","item","Number","map","src","photo","alt","onClick","prevCounts","newCount","value","readOnly","deleteOrder","handleDeleteBtn","Container"],"sourceRoot":""}